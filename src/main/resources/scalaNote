1.scala中方法、函数、函数式编程和面向对象编程
    1) 在scala中，方法和函数几乎可以等同(比如他们的定义、使用、运行机制都一样)，只是
 函数的使用方式更加灵活多样
    2) 函数式编程是从编程方式（范式）的角度来谈的，可以这样理解：函数式编程把函数当成一等
    公民。充分利用函数、支持函数的多种使用方式
    比如：
    函数式一等公民，像变量一样，既可以作为函数的参数使用，也可以将函数赋值给一个变量，
    函数的创建不用依赖于类或者对象，而在java中，函数的创建则要依赖于类、抽象类或者接口。
    3）面向对象编程是以对象为基础的编程方式
    4）在scala中函数式编程和面向对象编程融合在一起
2. 懒加载
    1)lazy不能修饰var类型变量
    2)不但是在调用函数时，加了lazy，会导致函数的执行被延迟，我们在声明一个变量时，
   如果声明了lazy，那么变量值的分配也会推迟。
3. 类的注意事项
    1)scala语法中，类并不声明为public，所有这些类都具有公有可见性
    2)一个scala源文件可以包含多个类，而且默认都是public
4. 类的继承
    1)在scala中，子类继承了父类的所有属性
    2)但是private的属性和方法无法访问
5. 伴生对象
    1)scala中伴生对象采用object关键字声明，伴生对象中声明的全是"静态"内容，可以通过
    伴生对象直接调用
    2)伴生对象对应的类称之为伴生类，伴生对象的名称应该和伴生类名一致
    3)伴生对象中的属性和方法都可以通过伴生对象名(类名)直接调用访问
    4)从语法角度来讲，所谓的伴生对象其实就是类的静态方法和成员的集合
    5)从技术角度来讲，scala还是没有生成静态的内容，只不过是将伴生对象生成了一个新的类，实现属性和方法的调用